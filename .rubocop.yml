# list = posts.map { |post| post.title.strip }.
#   select ...
Layout/DotPosition:
  EnforcedStyle: trailing

# var = if condition
#         code       # Layout/IndentationWidth
#       else         # Layout/ElseAlignment
#       end          # Layout/EndAlignment
Layout/ElseAlignment:
  Enabled: no
Layout/EndAlignment:
  Enabled: no
Layout/IndentationWidth:
  Enabled: no

# Interfacer, Route, store = import('registry').
#                            grab(:Interfacer, :Route, :data_store)
Layout/MultilineMethodCallIndentation:
  Enabled: no

# def initialize(id: nil, title:, body:)# , author:, tags: Array.new)
# def initialize(id: nil, title:, body:) # , author:, tags: Array.new)
Layout/SpaceBeforeComment:
  Enabled: no

# {a: 1} vs. { a: 1 }
#
# Configuration parameters: EnforcedStyleForEmptyBraces.
# SupportedStyles: space, no_space, compact
# SupportedStylesForEmptyBraces: space, no_space
Layout/SpaceInsideHashLiteralBraces:
  EnforcedStyle: no_space

# Enable `if id = params[:id]`.
Lint/AssignmentInCondition:
  Enabled: no

# Disable renaming unused variables to their `_var` versions.
Lint/UnusedMethodArgument:
  Enabled: no

# Disable warning about long blocks (i. e. `Class.new { ... lines }`).
Metrics/BlockLength:
  Enabled: no

# Disables the following warning:
# Do not place comments on the same line as the def keyword.
#
# def initialize(id: nil, title:, body:)#, author:, tags: Array.new)
Style/CommentedKeyword:
  Enabled: no

# Do not change Hash.new to {}. I happen to like it this way dammit!
Style/EmptyLiteral:
  Enabled: no

# Disable warning about optional arguments in front.
# def render(status_code = 200, content)
Style/OptionalArguments:
  Enabled: no

# Do not warn about `@a, @b = a, b`.
Style/ParallelAssignment:
  Enabled: no

# Do not remove `self`, it is not redundant.
Style/RedundantSelf:
  Enabled: no

# Do not warn about `require 'pg'; PG.connect(dbname: 'blog')`.
Style/Semicolon:
  Enabled: no

# Prefer `[:a, :b, :c]` over `%i[a b c]`.
Style/SymbolArray:
  EnforcedStyle: brackets

# Do not enforce one particular style of quotation.
Style/StringLiterals:
  # EnforcedStyle: single_quotes | double_quotes
  Enabled: no

# The standard is 80, but I can fit 90 x 90 into a split screen.
Metrics/LineLength:
  Max: 90

# Project-specific.
#
# Disable warning about `Interfacer, Route = import('registry').grab(...)`.
Naming/ConstantName:
  Enabled: no
